#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/core/aspnet:3.1-buster-slim AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/core/sdk:3.1-buster AS build
WORKDIR /src
COPY ["DVG.CK.OMS/DVG.CK.OMS.csproj", "CMS/DVG.CK.OMS/"]
COPY ["DVG.WIS.Business/DVG.WIS.Business.csproj", "CMS/DVG.WIS.Business/"]
COPY ["DVG.WIS.Core/DVG.WIS.Core.csproj", "CMS/DVG.WIS.Core/"]
COPY ["DVG.WIS.Utilities/DVG.WIS.Utilities.csproj", "CMS/DVG.WIS.Utilities/"]
COPY ["DVG.WIS.PublicModel/DVG.WIS.PublicModel.csproj", "CMS/DVG.WIS.PublicModel/"]
COPY ["DVG.WIS.Entities/DVG.WIS.Entities.csproj", "CMS/DVG.WIS.Entities/"]
COPY ["DVG.WIS.DAL/DVG.WIS.DAL.csproj", "CMS/DVG.WIS.DAL/"]
COPY ["DVG.WIS.Caching/DVG.WIS.Caching.csproj", "CMS/DVG.WIS.Caching/"]
RUN dotnet restore "CMS/DVG.CK.OMS/DVG.CK.OMS.csproj"
COPY . CMS
WORKDIR "/src/CMS/DVG.CK.OMS"
RUN dotnet build "DVG.CK.OMS.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "DVG.CK.OMS.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "DVG.CK.OMS.dll"]